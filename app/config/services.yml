# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    orbital.upload_dir: %kernel.root_dir%/../web/uploads/

services:
    orbital.authenticator:
        class: AppBundle\Services\Security\PamAuthenticator
        arguments: ["@security.password_encoder", "@doctrine"]

    orbital.person_importer:
        class: AppBundle\Services\Importing\PersonImporter
        arguments: ["@doctrine"]
    orbital.image_importer:
        class: AppBundle\Services\Importing\ImageUploader
        arguments: ["%orbital.upload_dir%"]

#scoring
    orbital.scoring.live_listener:
        class: AppBundle\Services\Scoring\LiveScoringListener
        arguments: ['@socketio_client']
        tags:
            - { name: kernel.event_listener, event: 'orbital.events.score_arrow_create', method: arrowAdded }
            - { name: kernel.event_listener, event: 'orbital.events.score_arrow_update', method: arrowUpdated }
            - { name: kernel.event_listener, event: 'orbital.events.score_arrow_remove', method: arrowRemoved }
    orbital.scoring.agg_listener:
        class: AppBundle\Services\Scoring\ScoringAggregationListener
        arguments: ['@doctrine']
        tags:
            - { name: kernel.event_listener, event: 'orbital.events.score_arrow_create', method: arrowAdded }
            - { name: kernel.event_listener, event: 'orbital.events.score_arrow_update', method: arrowUpdated }
            - { name: kernel.event_listener, event: 'orbital.events.score_arrow_remove', method: arrowRemoved }
    orbital.scoring.record_listener:
        class: AppBundle\Services\Scoring\RecordListener
        arguments: ["@doctrine"]
        tags:
            - { name: kernel.event_listener, event: 'orbital.events.score_create', method: handleScore }
            - { name: kernel.event_listener, event: 'orbital.events.score_update', method: handleScore }

# handicaps
    orbital.handicap.calculate:
        class: AppBundle\Services\Handicap\HandicapCalculator
    orbital.handicap.manager:
        class: AppBundle\Services\Handicap\HandicapManager
        arguments: ["@doctrine", "@orbital.handicap.calculate"]
    orbital.handicap.listener:
        class: AppBundle\Services\Handicap\HandicapListener
        arguments: ["@orbital.handicap.manager", "@doctrine"]
        tags:
            - { name: kernel.event_listener, event: 'orbital.events.score_create', method: score_create }
            - { name: kernel.event_listener, event: 'orbital.events.score_update', method: score_update }

# approvals
    orbital.approval.manager:
        class: AppBundle\Services\Approvals\ApprovalQueueManager
        arguments: ["@doctrine", "@router"]
    orbital.approval.providers.score:
        class: AppBundle\Services\Approvals\Providers\ScoreApprovalProvider
        public: false
        tags:
          - { name: orbital.approval.provider }
    orbital.approval.providers.badge:
        class: AppBundle\Services\Approvals\Providers\BadgeApprovalProvider
        public: false
        tags:
          - { name: orbital.approval.provider }
    orbital.approval.providers.record:
        class: AppBundle\Services\Approvals\Providers\RecordApprovalProvider
        public: false
        tags:
          - { name: orbital.approval.provider }
    orbital.approval.providers.competition_entry:
        class: AppBundle\Services\Approvals\Providers\CompetitionEntryApprovalProvider
        public: false
        tags:
          - { name: orbital.approval.provider }

# competitions
    orbital.competition.result_manager:
        class: AppBundle\Services\Competitions\CompetitionResultsManager
        arguments: ["@doctrine"]

# leagues
    orbital.league.manager:
        class: AppBundle\Services\Leagues\LeagueManager
        arguments: ["@doctrine"]
    orbital.league.listener:
        class: AppBundle\Services\Leagues\LeagueListener
        arguments: ["@orbital.league.manager"]
        tags:
            - { name: kernel.event_listener, event: 'orbital.events.match_create', method: match_create }
            - { name: kernel.event_listener, event: 'orbital.events.match_update', method: match_update }

    orbital.league.algo.wins:
        class: AppBundle\Services\Leagues\Algorithms\WinsAlgorithm
        public: false
        tags:
          - { name: orbital.league.algo }
    orbital.league.algo.steal:
        class: AppBundle\Services\Leagues\Algorithms\StealAlgorithm
        arguments: ["100"]
        public: false
        tags:
          - { name: orbital.league.algo }
    orbital.league.algo.icac:
        class: AppBundle\Services\Leagues\Algorithms\ICACAlgorithm
        public: false
        tags:
          - { name: orbital.league.algo }
    orbital.league.algo.icac_hc:
        class: AppBundle\Services\Leagues\Algorithms\ICACHandicapAlgorithm
        public: false
        tags:
          - { name: orbital.league.algo }


# voters
    orbital.security.badge_voter:
        class: AppBundle\Services\Security\BadgeVoter
        public: false
        tags:
          - { name: security.voter }
    orbital.security.competition_session_voter:
        class: AppBundle\Services\Security\CompetitionSessionVoter
        public: false
        tags:
          - { name: security.voter }
    orbital.security.league_voter:
      class: AppBundle\Services\Security\LeagueVoter
      public: false
      tags:
        - { name: security.voter }
    orbital.security.league_match_voter:
      class: AppBundle\Services\Security\LeagueMatchVoter
      public: false
      tags:
        - { name: security.voter }
    orbital.security.score_voter:
        class: AppBundle\Services\Security\ScoreVoter
        public: false
        tags:
          - { name: security.voter }
    orbital.security.scoring_voter:
        class: AppBundle\Services\Security\ScoringVoter
        public: false
        tags:
          - { name: security.voter }

# events
    orbital.events.doctrine:
        class: AppBundle\Services\Events\DoctrineListener
        arguments: ["@event_dispatcher"]
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: postRemove }
            - { name: doctrine.event_listener, event: postFlush }

# twig extensions
    orbital.twig.enum:
        class: AppBundle\Services\Twig\EnumExtension
        public: false
        tags:
            - { name: twig.extension }
    orbital.twig.array:
        class: AppBundle\Services\Twig\ArrayExtension
        public: false
        tags:
            - { name: twig.extension }
    orbital.twig.constant:
        class: AppBundle\Services\Twig\ConstantExtension
        public: false
        tags:
            - { name: twig.extension }
    orbital.twig.letter:
        class: AppBundle\Services\Twig\LetterExtension
        public: false
        tags:
            - { name: twig.extension }
    orbital.twig.measure:
        class: AppBundle\Services\Twig\MeasureExtension
        public: false
        tags:
            - { name: twig.extension }
    orbital.twig.barcode:
        class: AppBundle\Services\Twig\BarcodeExtension
        arguments: ["@service_container"]
        public: false
        tags:
            - { name: twig.extension }
    orbital.twig.security:
        class: AppBundle\Services\Twig\SecurityExtension
        arguments: ["@security.authorization_checker"]
        public: false
        tags:
            - { name: twig.extension }

